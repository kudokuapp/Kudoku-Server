generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  username          String            @unique
  password          String
  pin               String
  firstName          String
  lastName          String
  email             String            @unique
  whatsapp          String            @unique
  kudosNo           Int               @unique
  createdAt         DateTime          @default(now())
  subscribe         Subscribe?       
  profile            Profile?            
  refresh           Refresh?         
  account           Account?         
  cashAccount       CashAccount?   
}

model Profile {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  user             User       @relation(fields: [userId], references: [id])
  userId           String     @unique @db.ObjectId
  bio              String?
  profilePicture    String?
  birthday         DateTime?
}

model Subscribe {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique @db.ObjectId
  startDate   DateTime
  endDate     DateTime
}

model Refresh {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique @db.ObjectId
  date      DateTime
}

model Account {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  user              User            @relation(fields: [userId], references: [id])
  userId            String          @unique @db.ObjectId
  institution       Institution     @relation(fields: [institutionId], references: [id])
  institutionId     String          @unique @db.ObjectId
  accountNumber     String
  accessToken       String
  balance           String
  createdAt         DateTime        @default(now())
  transaction       Transaction[]   
}

model CashAccount {
  id                String                @id @default(auto()) @map("_id") @db.ObjectId
  user              User                  @relation(fields: [userId], references: [id])
  userId            String                @unique @db.ObjectId
  createdAt         DateTime              @default(now())
  lastUpdate        DateTime
  cashTransaction   CashTransaction[]   
  accountName       String
  displayPicture    String?
  balance           String
  currency          String
}

model CashTransaction {
  id                              String            @id @default(auto()) @map("_id") @db.ObjectId
  cashAccount                     CashAccount       @relation(fields: [cashAccountId], references: [id])
  cashAccountId                   String            @db.ObjectId
  dateTimestamp                   DateTime
  currency                        String
  amount                          String            //Takut aneh kalo number
  merchant                        Merchant?         @relation(fields: [merchantId], references: [id])
  merchantId                      String?           @db.ObjectId
  category                        Json?
  transactionType                 TransactionType   @default(EXPENSE)
  direction                       DirectionType     @default(OUT)
  internalTransferAccountId       String?           @db.ObjectId
  notes                           String?
  location                        Location?
  tags                            String[]
  isHideFromBudget                Boolean           @default(false)
  isHideFromInsight               Boolean           @default(false) 
}

model Institution {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  displayName   String
  picture       String
  account       Account[]
}

model Merchant {
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  picture               String
  url                   String
  cashTransaction       CashTransaction[]
  transaction           Transaction[]
}

model Transaction {
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  account               Account           @relation(fields: [accountId], references: [id])
  accountId             String            @unique @db.ObjectId
  dateTimestamp         DateTime
  referenceId           String
  currency              String
  amount                String            //Takut aneh kalo number
  onlineTransaction     Boolean           @default(false)
  isReviewed            Boolean           @default(false)
  merchant              Merchant          @relation(fields: [merchantId], references: [id])
  merchantId            String            @unique @db.ObjectId
  expenseCategory       String[]
  transactionType       TransactionType   @default(EXPENSE)
  isSubscription        Boolean           @default(false)
  description           String
  notes                 String
  institutionId         Int
  location              Location
  tags                  String[]
  isHideFromBudget      Boolean           @default(false)
  isHideFromInsight     Boolean           @default(false) 
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
  RECONCILE
}

enum DirectionType {
  IN
  OUT
}

type Location {
  longitude   String
  latitude    String
}
