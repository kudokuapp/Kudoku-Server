### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayLoad {
  """JWT Token"""
  token: String!
}

type Mutation {
  """
  Change the user password. Must have JWT Token from running OTP Verification
  """
  changePassword(jwtToken: String!, password: String!): AuthPayLoad!

  """Change the user pin. Must have JWT Token from running OTP Verification"""
  changePin(jwtToken: String!, pin: String!): AuthPayLoad!

  """
  This is the API where user can sign up after they got invited. This means that the user's data is already in our MongoDB database.
  """
  signup(id: ID!, jwtToken: String!, password: String!, pin: String!, username: String!): AuthPayLoad!

  """
  Change user's info (email, whatsapp, etc.) but not the user public profile
  """
  updateUserFirstAndLastName(
    """
    Fill this with the updated firstName, otherwise fill this with "null"
    """
    firstName: String

    """
    Fill this with the updated lastName, otherwise fill this with "null"
    """
    lastName: String
  ): User!
}

type Query {
  """
  This API is to get every user's data in our database. Useful for checking if username is already taken or not.
  """
  getAllUser: [User!]!

  """Get OTP to user email/whatsapp. WhatsApp needs to have "+62" prefix."""
  getOtp(
    """
    Fill this with user email if you want to verify the OTP via the EMAIL OTP, otherwise fill this with "null"
    """
    email: String

    """
    Fill this with user phone number if you want to verify the OTP via the SMS OTP, otherwise fill this with "null"
    """
    whatsapp: String
  ): ResponseMessage

  """Get User's info from either their ID, Username, or Token"""
  getUser(
    """
    Fill this with their id, otherwise fill this with "null"
    """
    id: String

    """
    Fill this with JWT Token, otherwise fill this with "null"
    """
    token: String

    """
    Fill this with username, otherwise fill this with "null"
    """
    username: String
  ): User
  login(password: String!, username: String!): AuthPayLoad!

  """
  Get JWT Token from email/whatsapp OTP that has been requested from the client. We then verified the OTP in this server. WhatsApp needs to have "+62" prefix.
  """
  verifyOtp(
    """
    Fill this with user email if you want to verify the OTP via the EMAIL OTP, otherwise fill this with "null"
    """
    email: String
    otp: String!

    """
    Fill this with user phone number if you want to verify the OTP via the SMS OTP, otherwise fill this with "null"
    """
    whatsapp: String
  ): AuthPayLoad!

  """Get JWT Token from user's PIN."""
  verifyPin(pin: String!, username: String!): AuthPayLoad!
}

type ResponseMessage {
  """Response message"""
  response: String
}

type User {
  email: String!
  firstName: String!

  """id generated automatically by MongoDB"""
  id: String!

  """This is the kudos No."""
  kudosNo: Int!
  lastName: String!
  username: String!
  whatsapp: String!
}