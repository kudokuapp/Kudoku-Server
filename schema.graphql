### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayLoad {
  """JWT Token"""
  token: String!
}

type CashAccount {
  """
  Name, should user choose it's name differently. Default should be just "Cash"
  """
  accountName: String!

  """The balance of that cash account"""
  balance: String!

  """When this account is created"""
  createdAt: String!

  """base64 image"""
  displayPicture: String

  """id generated automatically by MongoDB"""
  id: String!
  user: User!
  userId: String!
}

type Mutation {
  """Create a new cash account."""
  addCashAccount(
    """
    The account name of the cash account that user created. Default to "Cash"
    """
    accountName: String! = "Cash"

    """The icon or display picture of that account"""
    displayPicture: String

    """The starting balance of the cash account"""
    startingBalance: String! = "0"
  ): CashAccount!

  """Create a new cash account."""
  addCashTransaction(
    """
    The account name of the cash account that user created. Default to "Cash"
    """
    accountName: String! = "Cash"

    """The icon or display picture of that account"""
    displayPicture: String

    """The starting balance of the cash account"""
    startingBalance: String! = "0"
  ): CashAccount!

  """
  Change the user password. Must have JWT Token from running OTP Verification
  """
  changePassword(jwtToken: String!, password: String!): AuthPayLoad!

  """Change the user pin. Must have JWT Token from running OTP Verification"""
  changePin(jwtToken: String!, pin: String!): AuthPayLoad!

  """
  This is the API where user can sign up after they got invited. This means that the user's data is already in our MongoDB database.
  """
  signup(id: ID!, jwtToken: String!, password: String!, pin: String!, username: String!): AuthPayLoad!

  """Change user's email or whatsapp"""
  updateEmailOrWhatsapp(
    """
    Fill this with the updated email, otherwise fill this with "null"
    """
    email: String

    """Fill this with jwtToken after running otpVerify"""
    jwtToken: String!

    """
    Fill this with the updated whatsapp, otherwise fill this with "null"
    """
    whatsapp: String
  ): User!

  """Change user's public profile"""
  updateProfile(
    """Fill this with the user's public bio"""
    bio: String

    """Fill this with the user's birthday. Format: YYYY-MM-DD"""
    birthday: String

    """
    Fill this with the user's profile picture. Important: Use base64 images.
    """
    profilePicture: String
  ): Profile!

  """
  Change user's info (email, whatsapp, etc.) but not the user public profile
  """
  updateUserFirstAndLastName(
    """
    Fill this with the updated firstName, otherwise fill this with "null"
    """
    firstName: String

    """
    Fill this with the updated lastName, otherwise fill this with "null"
    """
    lastName: String
  ): User!
}

type Profile {
  bio: String
  birthday: String

  """id generated automatically by MongoDB"""
  id: String!
  profilePicture: String
  user: User!

  """userId for that particular user"""
  userId: String!
}

type Query {
  """
  This API is to get every user's data in our database. Useful for checking if username is already taken or not.
  """
  getAllUser: [User!]!

  """Get OTP to user email/whatsapp. WhatsApp needs to have "+62" prefix."""
  getOtp(
    """
    Fill this with user email if you want to verify the OTP via the EMAIL OTP, otherwise fill this with "null"
    """
    email: String

    """
    Fill this with user phone number if you want to verify the OTP via the SMS OTP, otherwise fill this with "null"
    """
    whatsapp: String
  ): ResponseMessage

  """Get User's profile from their userId or username"""
  getProfile(
    """
    Fill this with their id, otherwise fill this with "null"
    """
    userId: String

    """
    Fill this with username, otherwise fill this with "null"
    """
    username: String
  ): Profile

  """Get User's info from either their ID, Username, or Token"""
  getUser(
    """
    Fill this with their id, otherwise fill this with "null"
    """
    id: String

    """
    Fill this with JWT Token, otherwise fill this with "null"
    """
    token: String

    """
    Fill this with username, otherwise fill this with "null"
    """
    username: String
  ): User
  login(password: String!, username: String!): AuthPayLoad!

  """
  Get JWT Token from email/whatsapp OTP that has been requested from the client. We then verified the OTP in this server. WhatsApp needs to have "+62" prefix.
  """
  verifyOtp(
    """
    Fill this with user email if you want to verify the OTP via the EMAIL OTP, otherwise fill this with "null"
    """
    email: String
    otp: String!

    """
    Fill this with user phone number if you want to verify the OTP via the SMS OTP, otherwise fill this with "null"
    """
    whatsapp: String
  ): AuthPayLoad!

  """Get JWT Token from user's PIN."""
  verifyPin(pin: String!, username: String!): AuthPayLoad!
}

type ResponseMessage {
  """Response message"""
  response: String
}

type User {
  email: String!
  firstName: String!

  """id generated automatically by MongoDB"""
  id: String!

  """This is the kudos No."""
  kudosNo: Int!
  lastName: String!
  username: String!
  whatsapp: String!
}